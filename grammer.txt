program        = declaration* EOF ;

declaration    = funDecl | varDecl | statement ;

funDecl        = "fun" function ;
varDecl        = "var" IDENTIFIER ( "=" expression )? ";" ;
statement      = exprStmt | forStmt | ifStmt | printStmt | whileStmt | block ;

function       = IDENTIFIER "(" parameters? ")" block ;
exprStmt       = expression ";" ;
forStmt        = "for" "(" ( varDecl | exprStmt | ";" ) expression? ";" expression? ")" statements ;
ifStmt         = "if" "(" expression ")" statement ( "else" statement )? ;
printStmt      = "print" expression ";" ;
whileStmt      = "while" "(" expression ")" statement ;
block          = "{" declaration* "}" ;

parameters     = IDENTIFIER ( "," IDENTIFIER )* ;
expression     = assignment ;
assignment     = IDENTIFIER "=" assignment | logic_or ;
logic_or       = logic_and ( "or" logic_and )* ;
logic_and      = equality ( "and" equality )* ;
equality       = comparison ( ( "!=" | "==" ) comparison )* ;
comparison     = addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition       = multiplication ( ( "+" | "-" ) multiplication )* ;
multiplication = unary ( ( "/" | "*" ) unary )* ;
unary          = ( "!" | "-" ) unary
                 | call ;
call           = primary ( "(" arguments? ")" )* ;
arguments      = expression ( "," expression )* ;
primary        = NUMBER | STRING | "false" | "true" | "nil"
                 | "(" expression ")"
                 | IDENTIFIER ;
